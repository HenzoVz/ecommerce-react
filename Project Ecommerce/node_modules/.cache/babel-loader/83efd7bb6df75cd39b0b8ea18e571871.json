{"ast":null,"code":"import _defineProperty from \"/Users/mac/Desktop/Faculdade/Tecnologias da Internet/Cobra-Cafeinada/Project Ecommerce/login-register/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/mac/Desktop/Faculdade/Tecnologias da Internet/Cobra-Cafeinada/Project Ecommerce/login-register/src/components/Register/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./register.css\";\nimport bcrypt from \"bcryptjs\";\nimport { history } from \"../../App\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nconst baseUrl = \"http://localhost:3001/users\";\nconst initialState = {\n  user: {\n    id: \"\",\n    name: \"\",\n    email: \"\",\n    password: \"\"\n  },\n  list: []\n};\n\nfunction emailIsValid(email) {\n  return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\n}\n\nclass Register extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = _objectSpread({}, initialState);\n\n    this.notify = text => toast(text);\n  }\n\n  componentDidMount() {\n    axios(baseUrl).then(resp => {\n      this.setState({\n        list: resp.data\n      });\n    });\n  }\n\n  async save(e) {\n    e.preventDefault();\n    const user = this.state.user; // const { email, password } = this.state;\n\n    if (!user.name) {\n      this.notify(\"Nome é obrigatório !!!\");\n    } else if (!user.email) {\n      this.notify(\"Email é obrigatório !!!\");\n    } else if (emailIsValid(user.email) !== true) {\n      this.notify(\"Email inválido\");\n    } else if (!user.password) {\n      this.notify(\"Senha é obrigatória !!!\");\n    } else {\n      const hashPassword = await bcrypt.hash(user.password, 8);\n      const method = \"post\";\n      const url = user.id ? \"\".concat(baseUrl, \"/\").concat(user.id) : baseUrl;\n      axios[method](url, {\n        id: user.id,\n        name: user.name,\n        email: user.email,\n        password: hashPassword\n      }).then(resp => {\n        // const list = this.getUpdatedList(resp.data);\n        this.notify(\"Cadastrado com sucesso\");\n      }).finally(() => {\n        history.push(\"/login\");\n      });\n    }\n  }\n\n  getUpdatedList(user, add = true) {\n    const list = this.state.list.filter(u => u.id !== user.id);\n    if (add) list.unshift(user);\n    return list;\n  }\n\n  updateField(event) {\n    const user = _objectSpread({}, this.state.user);\n\n    user[event.target.name] = event.target.value;\n    this.setState({\n      user\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(ToastContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      className: \"register-h1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Novo Usuario\"), React.createElement(\"form\", {\n      className: \"register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Nome:\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      value: this.state.user.name,\n      autoFocus: true,\n      autoComplete: \"off\",\n      onChange: e => this.updateField(e),\n      placeholder: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Email:\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      value: this.state.user.email,\n      autoComplete: \"off\",\n      onChange: e => this.updateField(e),\n      placeholder: \"teste@teste.com\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Senha:\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: this.state.user.password,\n      autoComplete: \"off\",\n      onChange: e => this.updateField(e),\n      placeholder: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: e => this.save(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Cadastrar\")));\n  }\n\n}\n\nexport default withRouter(Register);","map":{"version":3,"sources":["/Users/mac/Desktop/Faculdade/Tecnologias da Internet/Cobra-Cafeinada/Project Ecommerce/login-register/src/components/Register/index.js"],"names":["React","Component","withRouter","axios","bcrypt","history","ToastContainer","toast","baseUrl","initialState","user","id","name","email","password","list","emailIsValid","test","Register","state","notify","text","componentDidMount","then","resp","setState","data","save","e","preventDefault","hashPassword","hash","method","url","finally","push","getUpdatedList","add","filter","u","unshift","updateField","event","target","value","render"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AACA,OAAO,uCAAP;AAEA,MAAMC,OAAO,GAAG,6BAAhB;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,EAAE,EAAE,EAAN;AAAUC,IAAAA,IAAI,EAAE,EAAhB;AAAoBC,IAAAA,KAAK,EAAE,EAA3B;AAA+BC,IAAAA,QAAQ,EAAE;AAAzC,GADa;AAEnBC,EAAAA,IAAI,EAAE;AAFa,CAArB;;AAKA,SAASC,YAAT,CAAuBH,KAAvB,EAA8B;AAC5B,SAAO,6BAA6BI,IAA7B,CAAkCJ,KAAlC,CAAP;AACD;;AAED,MAAMK,QAAN,SAAuBjB,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC/BkB,KAD+B,qBAClBV,YADkB;;AAAA,SAQ/BW,MAR+B,GAQtBC,IAAI,IAAId,KAAK,CAACc,IAAD,CARS;AAAA;;AAE/BC,EAAAA,iBAAiB,GAAG;AAClBnB,IAAAA,KAAK,CAACK,OAAD,CAAL,CAAee,IAAf,CAAoBC,IAAI,IAAI;AAC1B,WAAKC,QAAL,CAAc;AAAEV,QAAAA,IAAI,EAAES,IAAI,CAACE;AAAb,OAAd;AACD,KAFD;AAGD;;AAID,QAAMC,IAAN,CAAWC,CAAX,EAAc;AACZA,IAAAA,CAAC,CAACC,cAAF;AAEA,UAAMnB,IAAI,GAAG,KAAKS,KAAL,CAAWT,IAAxB,CAHY,CAKZ;;AAEA,QAAI,CAACA,IAAI,CAACE,IAAV,EAAgB;AACd,WAAKQ,MAAL,CAAY,wBAAZ;AACD,KAFD,MAEO,IAAI,CAACV,IAAI,CAACG,KAAV,EAAiB;AACtB,WAAKO,MAAL,CAAY,yBAAZ;AACD,KAFM,MAEA,IAAIJ,YAAY,CAACN,IAAI,CAACG,KAAN,CAAZ,KAA6B,IAAjC,EAAuC;AAC5C,WAAKO,MAAL,CAAY,gBAAZ;AACD,KAFM,MAEA,IAAI,CAACV,IAAI,CAACI,QAAV,EAAoB;AACzB,WAAKM,MAAL,CAAY,yBAAZ;AACD,KAFM,MAEA;AACL,YAAMU,YAAY,GAAG,MAAM1B,MAAM,CAAC2B,IAAP,CAAYrB,IAAI,CAACI,QAAjB,EAA2B,CAA3B,CAA3B;AACA,YAAMkB,MAAM,GAAG,MAAf;AACA,YAAMC,GAAG,GAAGvB,IAAI,CAACC,EAAL,aAAaH,OAAb,cAAwBE,IAAI,CAACC,EAA7B,IAAoCH,OAAhD;AAEAL,MAAAA,KAAK,CAAC6B,MAAD,CAAL,CAAcC,GAAd,EAAmB;AAACtB,QAAAA,EAAE,EAAED,IAAI,CAACC,EAAV;AAAcC,QAAAA,IAAI,EAAEF,IAAI,CAACE,IAAzB;AAA+BC,QAAAA,KAAK,EAAEH,IAAI,CAACG,KAA3C;AAAkDC,QAAAA,QAAQ,EAAEgB;AAA5D,OAAnB,EACGP,IADH,CACQC,IAAI,IAAI;AACZ;AAEA,aAAKJ,MAAL,CAAY,wBAAZ;AACD,OALH,EAMGc,OANH,CAMW,MAAM;AACb7B,QAAAA,OAAO,CAAC8B,IAAR,CAAa,QAAb;AACD,OARH;AASD;AACF;;AAEDC,EAAAA,cAAc,CAAC1B,IAAD,EAAO2B,GAAG,GAAG,IAAb,EAAmB;AAC/B,UAAMtB,IAAI,GAAG,KAAKI,KAAL,CAAWJ,IAAX,CAAgBuB,MAAhB,CAAuBC,CAAC,IAAIA,CAAC,CAAC5B,EAAF,KAASD,IAAI,CAACC,EAA1C,CAAb;AACA,QAAI0B,GAAJ,EAAStB,IAAI,CAACyB,OAAL,CAAa9B,IAAb;AACT,WAAOK,IAAP;AACD;;AAED0B,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMhC,IAAI,qBAAQ,KAAKS,KAAL,CAAWT,IAAnB,CAAV;;AACAA,IAAAA,IAAI,CAACgC,KAAK,CAACC,MAAN,CAAa/B,IAAd,CAAJ,GAA0B8B,KAAK,CAACC,MAAN,CAAaC,KAAvC;AACA,SAAKnB,QAAL,CAAc;AAAEf,MAAAA;AAAF,KAAd;AACD;;AAEDmC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,EAGE;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,KAAK,EAAE,KAAK1B,KAAL,CAAWT,IAAX,CAAgBE,IAHzB;AAIE,MAAA,SAAS,MAJX;AAKE,MAAA,YAAY,EAAC,KALf;AAME,MAAA,QAAQ,EAAEgB,CAAC,IAAI,KAAKa,WAAL,CAAiBb,CAAjB,CANjB;AAOE,MAAA,WAAW,EAAC,UAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,EAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfF,EAgBE;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,KAAK,EAAE,KAAKT,KAAL,CAAWT,IAAX,CAAgBG,KAHzB;AAIE,MAAA,YAAY,EAAC,KAJf;AAKE,MAAA,QAAQ,EAAEe,CAAC,IAAI,KAAKa,WAAL,CAAiBb,CAAjB,CALjB;AAME,MAAA,WAAW,EAAC,iBANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBF,EAwBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxBF,EA0BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA1BF,EA2BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3BF,EA4BE;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,KAAK,EAAE,KAAKT,KAAL,CAAWT,IAAX,CAAgBI,QAHzB;AAIE,MAAA,YAAY,EAAC,KAJf;AAKE,MAAA,QAAQ,EAAEc,CAAC,IAAI,KAAKa,WAAL,CAAiBb,CAAjB,CALjB;AAME,MAAA,WAAW,EAAC,UANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA5BF,EAoCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApCF,EAsCE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAEA,CAAC,IAAI,KAAKD,IAAL,CAAUC,CAAV,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAtCF,CAHF,CADF;AAgDD;;AAvG8B;;AA0GjC,eAAe1B,UAAU,CAACgB,QAAD,CAAzB","sourcesContent":["import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./register.css\";\nimport bcrypt from \"bcryptjs\"\n\nimport { history } from \"../../App\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst baseUrl = \"http://localhost:3001/users\";\nconst initialState = {\n  user: { id: \"\", name: \"\", email: \"\", password: \"\" },\n  list: []\n};\n\nfunction emailIsValid (email) {\n  return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)\n}\n\nclass Register extends Component {\n  state = { ...initialState };\n  componentDidMount() {\n    axios(baseUrl).then(resp => {\n      this.setState({ list: resp.data });\n    });\n  }\n\n  notify = text => toast(text);\n\n  async save(e) {\n    e.preventDefault();\n\n    const user = this.state.user;\n\n    // const { email, password } = this.state;\n\n    if (!user.name) {\n      this.notify(\"Nome é obrigatório !!!\");\n    } else if (!user.email) {\n      this.notify(\"Email é obrigatório !!!\");\n    } else if (emailIsValid(user.email) !== true) {\n      this.notify(\"Email inválido\")\n    } else if (!user.password) {\n      this.notify(\"Senha é obrigatória !!!\");\n    } else {\n      const hashPassword = await bcrypt.hash(user.password, 8);\n      const method = \"post\";\n      const url = user.id ? `${baseUrl}/${user.id}` : baseUrl;\n\n      axios[method](url, {id: user.id, name: user.name, email: user.email, password: hashPassword})\n        .then(resp => {\n          // const list = this.getUpdatedList(resp.data);\n\n          this.notify(\"Cadastrado com sucesso\");\n        })\n        .finally(() => {\n          history.push(\"/login\");\n        });\n    }\n  }\n\n  getUpdatedList(user, add = true) {\n    const list = this.state.list.filter(u => u.id !== user.id);\n    if (add) list.unshift(user);\n    return list;\n  }\n\n  updateField(event) {\n    const user = { ...this.state.user };\n    user[event.target.name] = event.target.value;\n    this.setState({ user });\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastContainer />\n        <h1 className=\"register-h1\">Novo Usuario</h1>\n        <form className=\"register\">\n          <label>Nome:</label>\n          <br />\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.user.name}\n            autoFocus\n            autoComplete=\"off\"\n            onChange={e => this.updateField(e)}\n            placeholder=\"username\"\n          />\n          <br />\n\n          <label>Email:</label>\n          <br />\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={this.state.user.email}\n            autoComplete=\"off\"\n            onChange={e => this.updateField(e)}\n            placeholder=\"teste@teste.com\"\n          />\n          <br />\n\n          <label>Senha:</label>\n          <br />\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={this.state.user.password}\n            autoComplete=\"off\"\n            onChange={e => this.updateField(e)}\n            placeholder=\"password\"\n          />\n          <br />\n\n          <button type=\"submit\" onClick={e => this.save(e)}>\n            Cadastrar\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Register);\n"]},"metadata":{},"sourceType":"module"}